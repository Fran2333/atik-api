{"version":3,"sources":["../../src/models/order.js"],"names":["sequelize","DataTypes","Orden","define","type","STRING","field","deliveryDate","DATE","deliveryTime","TIME","subtotal","INTEGER","total","shipping","inputDate","state","associate","models","belongsToMany","producto","through","as","belongsTo","usuario","foreignKey","promocion"],"mappings":";;;;;;kBAAe,UAACA,SAAD,EAAYC,SAAZ,EAA0B;AACrC,QAAMC,QAAQF,UAAUG,MAAV,CAAiB,OAAjB,EAA0B;AACpCC,cAAM;AACFA,kBAAMH,UAAUI,MADd;AAEFC,mBAAO;AAFL,SAD8B;AAKpCC,sBAAc;AACVH,kBAAMH,UAAUO,IADN;AAEVF,mBAAO;AAFG,SALsB;AASpCG,sBAAc;AACVL,kBAAMH,UAAUS,IADN;AAEVJ,mBAAO;AAFG,SATsB;AAapCK,kBAAUV,UAAUW,OAbgB;AAcpCC,eAAOZ,UAAUW,OAdmB;AAepCE,kBAAU;AACNV,kBAAMH,UAAUW,OADV;AAENN,mBAAO;AAFD,SAf0B;AAmBpCS,mBAAW;AACPX,kBAAMH,UAAUO,IADT;AAEPF,mBAAO;AAFA,SAnByB;AAuBpCU,eAAO;AACHZ,kBAAMH,UAAUI,MADb;AAEHC,mBAAO;AAFJ;AAvB6B,KAA1B,CAAd;;AA6BAJ,UAAMe,SAAN,GAAkB,UAAUC,MAAV,EAAkB;AAChC;AACAhB,cAAMiB,aAAN,CAAoBD,OAAOE,QAA3B,EAAqC;AACjCC,qBAAS,eADwB;AAEjCC,gBAAI;AAF6B,SAArC;;AAKApB,cAAMqB,SAAN,CAAgBL,OAAOM,OAAvB,EAAgC;AAC5BC,wBAAY;AADgB,SAAhC;;AAIAvB,cAAMqB,SAAN,CAAgBL,OAAOQ,SAAvB,EAAkC;AAC9BJ,gBAAI,WAD0B;AAE9BG,wBAAY;AAFkB,SAAlC;AAIH,KAfD;;AAiBA,WAAOvB,KAAP;AACH,C","file":"order.js","sourcesContent":["export default (sequelize, DataTypes) => {\n    const Orden = sequelize.define(\"orden\", {\n        type: {\n            type: DataTypes.STRING,\n            field: \"tipo\",\n        },\n        deliveryDate: {\n            type: DataTypes.DATE,\n            field: \"fecha_entrega\",\n        },\n        deliveryTime: {\n            type: DataTypes.TIME,\n            field: \"hora_entrega\",\n        },\n        subtotal: DataTypes.INTEGER,\n        total: DataTypes.INTEGER,\n        shipping: {\n            type: DataTypes.INTEGER,\n            field: \"envio\",\n        },\n        inputDate: {\n            type: DataTypes.DATE,\n            field: \"fecha_pedido\",\n        },\n        state: {\n            type: DataTypes.STRING,\n            field: \"estado\",\n        },\n    });\n\n    Orden.associate = function (models) {\n        // associations go here\n        Orden.belongsToMany(models.producto, {\n            through: \"productoorden\",\n            as: \"products\",\n        });\n\n        Orden.belongsTo(models.usuario, {\n            foreignKey: \"cliente\",\n        });\n\n        Orden.belongsTo(models.promocion, {\n            as: \"promotion\",\n            foreignKey: \"promotion_id\",\n        });\n    };\n\n    return Orden;\n};\n"]}