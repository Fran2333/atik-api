{"version":3,"sources":["../../src/controllers/locations.js"],"names":["Locations","db","ubicacion","findAllLocations","req","res","findAll","then","locations","json","catch","err","status","findById","id","params","locationId","findOne","where","location","create","body","name","address","newLocation"],"mappings":";;;;;;;AAAA;;;;;;AACA,IAAMA,YAAYC,iBAAGC,SAArB;;AAEA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAc;AACnCL,cAAUM,OAAV,GACKC,IADL,CACU,UAACC,SAAD,EAAe;AACjBH,YAAII,IAAJ,CAAS,EAAED,oBAAF,EAAT;AACH,KAHL,EAIKE,KAJL,CAIW,UAACC,GAAD;AAAA,eAASN,IAAIO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAAEE,QAAF,EAArB,CAAT;AAAA,KAJX;AAKH,CAND;;AAQA,IAAME,WAAW,SAAXA,QAAW,CAACT,GAAD,EAAMC,GAAN,EAAc;AAC3B,QAAMS,KAAKV,IAAIW,MAAJ,CAAWC,UAAtB;;AAEAhB,cAAUiB,OAAV,CAAkB;AACdC,eAAO,EAAEJ,MAAF;AADO,KAAlB,EAGKP,IAHL,CAGU,UAACY,QAAD,EAAc;AAChBd,YAAII,IAAJ,CAAS,EAAEU,kBAAF,EAAT;AACH,KALL,EAMKT,KANL,CAMW,UAACC,GAAD;AAAA,eAASN,IAAIO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAAEE,QAAF,EAArB,CAAT;AAAA,KANX;AAOH,CAVD;;AAYA,IAAMS,SAAS,SAATA,MAAS,CAAChB,GAAD,EAAMC,GAAN,EAAc;AAAA,oBACDD,IAAIiB,IADH;AAAA,QACnBC,IADmB,aACnBA,IADmB;AAAA,QACbC,OADa,aACbA,OADa;;;AAGzB,QAAMC,cAAc;AAChBF,kBADgB;AAEhBC;AAFgB,KAApB;;AAKAvB,cAAUoB,MAAV,CAAiBI,WAAjB,EACKjB,IADL,CACU,UAACY,QAAD;AAAA,eAAcd,IAAII,IAAJ,CAASU,QAAT,CAAd;AAAA,KADV,EAEKT,KAFL,CAEW,UAACC,GAAD;AAAA,eAASN,IAAIO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,EAAEE,QAAF,EAArB,CAAT;AAAA,KAFX;AAGH,CAXD;;QAaSS,M,GAAAA,M;QAAQjB,gB,GAAAA,gB;QAAkBU,Q,GAAAA,Q","file":"locations.js","sourcesContent":["import db from \"../models\";\nconst Locations = db.ubicacion;\n\nconst findAllLocations = (req, res) => {\n    Locations.findAll()\n        .then((locations) => {\n            res.json({ locations });\n        })\n        .catch((err) => res.status(500).json({ err }));\n};\n\nconst findById = (req, res) => {\n    const id = req.params.locationId;\n\n    Locations.findOne({\n        where: { id }\n    })\n        .then((location) => {\n            res.json({ location });\n        })\n        .catch((err) => res.status(500).json({ err }));\n};\n\nconst create = (req, res) => {\n    let { name, address } = req.body;\n\n    const newLocation = {\n        name,\n        address,\n    };\n\n    Locations.create(newLocation)\n        .then((location) => res.json(location))\n        .catch((err) => res.status(500).json({ err }));\n};\n\nexport { create, findAllLocations, findById };\n"]}