{"version":3,"sources":["../../src/controllers/categories.js"],"names":["Product","db","producto","Category","categoria","findAllCategories","req","res","findAll","include","model","as","nested","then","json","categories","catch","status","err","findById","id","params","categoryId","findOne","where","category","findCategoryProductsById","products","create","body","name","imageUrl","newCategory","update","updateAll"],"mappings":"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","file":"categories.js","sourcesContent":["import db from '../models';\nimport category from '../models/category';\nconst Product = db.producto;\nconst Category = db.categoria;\n\nconst findAllCategories = (req, res) => {\n  Category.findAll({\n    include: [{model: Product, as: 'products', nested: false}],\n  })\n    .then(categories => {\n      res.json(categories);\n    })\n    .catch(err => res.status(500).json({err}));\n};\n\nconst findById = (req, res) => {\n  const id = req.params.categoryId;\n\n  Category.findOne({\n    where: {id},\n    include: [{model: Product, as: 'products', nested: false}],\n  })\n    .then(category => {\n      res.json({category});\n    })\n    .catch(err => res.status(500).json({err}));\n};\n\nconst findCategoryProductsById = (req, res) => {\n  const id = req.params.categoryId;\n\n  Category.findOne({\n    where: {id},\n    include: [{model: Product, as: 'products', nested: false}],\n  })\n    .then(category => {\n      const {products} = category;\n      res.json({products});\n    })\n    .catch(err => res.status(500).json({err}));\n};\n\nconst create = (req, res) => {\n  let {name, imageUrl} = req.body;\n\n  const newCategory = {\n    name,\n    imageUrl,\n  };\n\n  Category.create(newCategory)\n    .then(category => res.json(category))\n    .catch(err => res.status(500).json({err}));\n};\n\nconst update = (req, res) => {\n  const {name, imageUrl} = req.body;\n\n  const id = req.params.categoryId;\n\n  Category.update(\n    {\n      name,\n      imageUrl,\n    },\n    {where: {id}},\n  )\n    .then(category => res.json(category))\n    .catch(err => res.status(500).json({err}));\n};\n\nconst updateAll = (req, res) => {\n  const {imageUrl} = req.body;\n\n  Category.update(\n    {\n      imageUrl,\n    },\n    {\n      where: {imageUrl: null},\n    },\n  )\n    .then(categories => res.json(categories))\n    .catch(err => res.status(500).json({err}));\n};\n\nexport {\n  updateAll,\n  update,\n  create,\n  findAllCategories,\n  findById,\n  findCategoryProductsById,\n};\n"]}