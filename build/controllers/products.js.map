{"version":3,"sources":["../../src/controllers/products.js"],"names":["Product","db","producto","Category","categoria","findAllProducts","req","res","findAll","include","model","as","nested","then","json","products","catch","status","err","findById","id","params","productId","findOne","where","product","create","body","name","price","description","flavor","size","indications","imageUrl","categories","newProduct","setCategories","rs","update","length","deleteProduct","destroy","msg"],"mappings":"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","file":"products.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport passport from 'passport';\n\nimport db from '../models';\nconst Product = db.producto;\nconst Category = db.categoria;\n\n// fetch all products\nconst findAllProducts = (req, res) => {\n  Product.findAll({\n    include: [{model: Category, as: 'categories', nested: false}],\n  })\n    .then(products => {\n      res.json({products});\n    })\n    .catch(err => res.status(500).json({err}));\n};\n\nconst findById = (req, res) => {\n  const id = req.params.productId;\n\n  Product.findOne({\n    where: {id},\n    include: [{model: Category, as: 'categories', nested: false}],\n  })\n    .then(product => {\n      res.json({product});\n    })\n    .catch(err => res.status(500).json({err}));\n};\n\nconst create = (req, res) => {\n  let {\n    name,\n    price,\n    description,\n    flavor,\n    size,\n    indications,\n    imageUrl,\n    categories,\n  } = req.body;\n\n  const newProduct = {\n    name,\n    price,\n    description,\n    flavor,\n    size,\n    indications,\n    imageUrl,\n    categories,\n  };\n\n  Product.create(newProduct)\n    .then(product => {\n      product\n        .setCategories(categories)\n        .then(rs => res.json(rs))\n        .catch(err => res.status(500).json({err}));\n      res.json(product);\n    })\n    .catch(err => res.status(500).json({err}));\n};\n\nconst update = (req, res) => {\n  let {\n    name,\n    price,\n    description,\n    flavor,\n    size,\n    indications,\n    imageUrl,\n    categories,\n  } = req.body;\n  const id = req.params.productId;\n\n  Product.update(\n    {\n      name,\n      price,\n      description,\n      flavor,\n      size,\n      indications,\n      imageUrl,\n    },\n    {where: {id}},\n  )\n    .then(product => {\n      if (categories && categories.length > 0) {\n        product\n          .setCategories(categories)\n          .then(rs => res.json(rs))\n          .catch(err => res.status(500).json({err}));\n      } else {\n        return res.json(product);\n      }\n    })\n    .catch(err => res.status(500).json({err}));\n};\n\nconst deleteProduct = (req, res) => {\n  const id = req.params.productId;\n\n  Product.destroy({where: {id}})\n    .then(() =>\n      res.status(200).json({msg: 'Product has been deleted successfully!'}),\n    )\n    .catch(err => res.status(500).json({msg: 'Failed to delete!'}));\n};\n\nexport {create, update, deleteProduct, findAllProducts, findById};\n"]}